{"mappings":"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","sources":["<anon>","woocommerce/payment-gateway/assets/js/frontend/sv-wc-payment-gateway-apple-pay.coffee"],"sourcesContent":["(() => {\nvar $83dab3ad15da905a$exports = {};\n(function() {\n    /*\n   WooCommerce Apple Pay Handler\n   Version 4.7.0\n\n   Copyright (c) 2016, SkyVerge, Inc.\n   Licensed under the GNU General Public License v3.0\n   http://www.gnu.org/licenses/gpl-3.0.html\n  */ jQuery(function($) {\n        \"use strict\";\n        // The WooCommerce Apple Pay handler base class.\n        // @since 4.7.0\n        window.SV_WC_Apple_Pay_Handler_v5_15_10 = class SV_WC_Apple_Pay_Handler_v5_15_10 {\n            // Constructs the handler.\n            // @since 4.7.0\n            constructor(args){\n                // Initializes the product page.\n                // @since 5.6.0\n                this.init_product_page = this.init_product_page.bind(this);\n                // Initializes the cart page.\n                // @since 5.6.0\n                this.init_cart_page = this.init_cart_page.bind(this);\n                // Initializes the checkout page.\n                // @since 5.6.0\n                this.init_checkout_page = this.init_checkout_page.bind(this);\n                // The callback for after the merchant data is validated.\n                // @since 4.7.0\n                this.on_validate_merchant = this.on_validate_merchant.bind(this);\n                // Validates the merchant data.\n                // @since 4.7.0\n                // @return object\n                this.validate_merchant = this.validate_merchant.bind(this);\n                // Fires after a payment method has been selected.\n                // @since 4.7.0\n                this.on_payment_method_selected = this.on_payment_method_selected.bind(this);\n                // Fires after a shipping contact has been selected.\n                // @since 4.7.0\n                this.on_shipping_contact_selected = this.on_shipping_contact_selected.bind(this);\n                // Fires after a shipping method has been selected.\n                // @since 4.7.0\n                this.on_shipping_method_selected = this.on_shipping_method_selected.bind(this);\n                // The callback for after the payment data is authorized.\n                // @since 4.7.0\n                this.on_payment_authorized = this.on_payment_authorized.bind(this);\n                // Processes the transaction data.\n                // @since 4.7.0\n                this.process_authorization = this.process_authorization.bind(this);\n                // The callback for when the payment card is cancelled/dismissed.\n                // @since 4.7.0\n                this.on_cancel_payment = this.on_cancel_payment.bind(this);\n                // Resets the payment request via AJAX.\n                // Extending handlers can call this on change events to refresh the data.\n                // @since 4.7.0\n                this.reset_payment_request = this.reset_payment_request.bind(this);\n                // Gets the payment request via AJAX.\n                // @since 4.7.0\n                this.get_payment_request = this.get_payment_request.bind(this);\n                this.gateway_id = args.gateway_id;\n                this.gateway_slug = args.gateway_slug;\n                this.merchant_id = args.merchant_id;\n                this.ajax_url = args.ajax_url;\n                this.validate_nonce = args.validate_nonce;\n                this.recalculate_totals_nonce = args.recalculate_totals_nonce;\n                this.process_nonce = args.process_nonce;\n                this.payment_request = args.payment_request;\n                this.generic_error = args.generic_error;\n                this.wrapper = '.sv-wc-external-checkout';\n                this.container = '.buttons-container';\n                this.button = '.sv-wc-apple-pay-button';\n            }\n            // Determines if Apple Pay is available.\n            // @since 4.7.0\n            // @return bool\n            is_available() {\n                if (!window.ApplePaySession) return false;\n                return ApplePaySession.canMakePaymentsWithActiveCard(this.merchant_id).then((canMakePayments)=>{\n                    return canMakePayments;\n                });\n            }\n            // Initializes the handler.\n            // @since 4.7.0\n            init() {\n                // hide the wrapper if Apple Pay is the only button\n                if ($(this.container).children().length === 1) $(this.wrapper).hide();\n                if (!this.is_available()) return;\n                // initialize for the various pages\n                if ($('form.cart').length) this.init_product_page();\n                else if ($('form.woocommerce-cart-form').length) this.init_cart_page();\n                else if ($('form.woocommerce-checkout').length) this.init_checkout_page();\n                // bail if no UI was initialized\n                if (!this.ui_element) return;\n                if (this.payment_request) {\n                    $(this.button).show();\n                    $(this.wrapper).show();\n                }\n                return $(document.body).on('click', '.sv-wc-apple-pay-button', (e)=>{\n                    var error;\n                    e.preventDefault();\n                    this.block_ui();\n                    try {\n                        this.session = this.get_new_session(this.payment_request);\n                        // set the payment card events\n                        this.session.onvalidatemerchant = (event)=>{\n                            return this.on_validate_merchant(event);\n                        };\n                        this.session.onpaymentmethodselected = (event)=>{\n                            return this.on_payment_method_selected(event);\n                        };\n                        this.session.onshippingcontactselected = (event)=>{\n                            return this.on_shipping_contact_selected(event);\n                        };\n                        this.session.onshippingmethodselected = (event)=>{\n                            return this.on_shipping_method_selected(event);\n                        };\n                        this.session.onpaymentauthorized = (event)=>{\n                            return this.on_payment_authorized(event);\n                        };\n                        this.session.oncancel = (event)=>{\n                            return this.on_cancel_payment(event);\n                        };\n                        return this.session.begin();\n                    } catch (error1) {\n                        error = error1;\n                        return this.fail_payment(error);\n                    }\n                });\n            }\n            init_product_page() {\n                return this.ui_element = $('form.cart');\n            }\n            init_cart_page() {\n                this.ui_element = $('form.woocommerce-cart-form').parents('div.woocommerce');\n                // re-init if the cart totals are updated\n                return $(document.body).on('updated_cart_totals', ()=>{\n                    return this.reset_payment_request();\n                });\n            }\n            init_checkout_page() {\n                this.ui_element = $('form.woocommerce-checkout');\n                return $(document.body).on('updated_checkout', ()=>{\n                    // re-init if the checkout is updated\n                    return this.reset_payment_request();\n                });\n            }\n            // Gets a new Apple Pay session.\n            // @since 5.6.0\n            // @param [Object] payment_request payment request object\n            // @return ApplePaySession\n            get_new_session(payment_request) {\n                return new ApplePaySession(this.get_sdk_version(), payment_request);\n            }\n            // Gets the Apple SDK version to use.\n            // @since 5.6.0\n            // @return int\n            get_sdk_version() {\n                return 2;\n            }\n            on_validate_merchant(event) {\n                return this.validate_merchant(event.validationURL).then((merchant_session)=>{\n                    merchant_session = JSON.parse(merchant_session);\n                    return this.session.completeMerchantValidation(merchant_session);\n                }, (response)=>{\n                    this.session.abort();\n                    return this.fail_payment('Merchant could no be validated. ' + response.message);\n                });\n            }\n            validate_merchant(url) {\n                return new Promise((resolve, reject)=>{\n                    var data;\n                    data = {\n                        'action': `wc_${this.gateway_id}_apple_pay_validate_merchant`,\n                        'nonce': this.validate_nonce,\n                        'merchant_id': this.merchant_id,\n                        'url': url\n                    };\n                    // retrieve a payment request object\n                    return $.post(this.ajax_url, data, (response)=>{\n                        if (response.success) return resolve(response.data);\n                        else return reject(response.data);\n                    });\n                });\n            }\n            on_payment_method_selected(event) {\n                return new Promise((resolve, reject)=>{\n                    var data;\n                    data = {\n                        'action': `wc_${this.gateway_id}_apple_pay_recalculate_totals`,\n                        'nonce': this.recalculate_totals_nonce\n                    };\n                    // retrieve a payment request object\n                    return $.post(this.ajax_url, data, (response)=>{\n                        if (response.success) {\n                            data = response.data;\n                            return resolve(this.session.completePaymentMethodSelection(data.total, data.line_items));\n                        } else {\n                            console.error('[Apple Pay] Error selecting a shipping contact. ' + response.data.message);\n                            return reject(this.session.completePaymentMethodSelection(this.payment_request.total, this.payment_request.lineItems));\n                        }\n                    });\n                });\n            }\n            on_shipping_contact_selected(event) {\n                return new Promise((resolve, reject)=>{\n                    var data;\n                    data = {\n                        'action': `wc_${this.gateway_id}_apple_pay_recalculate_totals`,\n                        'nonce': this.recalculate_totals_nonce,\n                        'contact': event.shippingContact\n                    };\n                    // retrieve a payment request object\n                    return $.post(this.ajax_url, data, (response)=>{\n                        if (response.success) {\n                            data = response.data;\n                            return resolve(this.session.completeShippingContactSelection(ApplePaySession.STATUS_SUCCESS, data.shipping_methods, data.total, data.line_items));\n                        } else {\n                            console.error('[Apple Pay] Error selecting a shipping contact. ' + response.data.message);\n                            return reject(this.session.completeShippingContactSelection(ApplePaySession.STATUS_FAILURE, [], this.payment_request.total, this.payment_request.lineItems));\n                        }\n                    });\n                });\n            }\n            on_shipping_method_selected(event) {\n                return new Promise((resolve, reject)=>{\n                    var data;\n                    data = {\n                        'action': `wc_${this.gateway_id}_apple_pay_recalculate_totals`,\n                        'nonce': this.recalculate_totals_nonce,\n                        'method': event.shippingMethod.identifier\n                    };\n                    // retrieve a payment request object\n                    return $.post(this.ajax_url, data, (response)=>{\n                        if (response.success) {\n                            data = response.data;\n                            return resolve(this.session.completeShippingMethodSelection(ApplePaySession.STATUS_SUCCESS, data.total, data.line_items));\n                        } else {\n                            console.error('[Apple Pay] Error selecting a shipping method. ' + response.data.message);\n                            return reject(this.session.completeShippingMethodSelection(ApplePaySession.STATUS_FAILURE, this.payment_request.total, this.payment_request.lineItems));\n                        }\n                    });\n                });\n            }\n            on_payment_authorized(event) {\n                return this.process_authorization(event.payment).then((response)=>{\n                    this.set_payment_status(true);\n                    return this.complete_purchase(response);\n                }, (response)=>{\n                    this.set_payment_status(false);\n                    return this.fail_payment('Payment could no be processed. ' + response.message);\n                });\n            }\n            process_authorization(payment) {\n                return new Promise((resolve, reject)=>{\n                    var data;\n                    data = {\n                        action: `wc_${this.gateway_id}_apple_pay_process_payment`,\n                        nonce: this.process_nonce,\n                        payment: JSON.stringify(payment)\n                    };\n                    return $.post(this.ajax_url, data, (response)=>{\n                        if (response.success) return resolve(response.data);\n                        else return reject(response.data);\n                    });\n                });\n            }\n            on_cancel_payment(event) {\n                return this.unblock_ui();\n            }\n            // Completes the purchase based on the gateway result.\n            // @since 4.7.0\n            complete_purchase(response) {\n                return window.location = response.redirect;\n            }\n            // Fails the purchase based on the gateway result.\n            // @since 4.7.0\n            fail_payment(error) {\n                console.error('[Apple Pay] ' + error);\n                this.unblock_ui();\n                return this.render_errors([\n                    this.generic_error\n                ]);\n            }\n            // Sets the Apple Pay payment status depending on the gateway result.\n            // @since 4.7.0\n            set_payment_status(success) {\n                var status;\n                if (success) status = ApplePaySession.STATUS_SUCCESS;\n                else status = ApplePaySession.STATUS_FAILURE;\n                return this.session.completePayment(status);\n            }\n            reset_payment_request(data = {}) {\n                this.block_ui();\n                return this.get_payment_request(data).then((response)=>{\n                    $(this.button).show();\n                    $(this.wrapper).show();\n                    this.payment_request = JSON.parse(response);\n                    return this.unblock_ui();\n                }, (response)=>{\n                    console.error('[Apple Pay] Could not build payment request. ' + response.message);\n                    $(this.button).hide();\n                    // hide the wrapper if Apple Pay is the only button\n                    if ($(this.container).children().length === 1) $(this.wrapper).hide();\n                    return this.unblock_ui();\n                });\n            }\n            get_payment_request(data) {\n                return new Promise((resolve, reject)=>{\n                    var base_data;\n                    base_data = {\n                        'action': `wc_${this.gateway_id}_apple_pay_get_payment_request`\n                    };\n                    $.extend(data, base_data);\n                    // retrieve a payment request object\n                    return $.post(this.ajax_url, data, (response)=>{\n                        if (response.success) return resolve(response.data);\n                        else return reject(response.data);\n                    });\n                });\n            }\n            // Renders any new errors and bring them into the viewport.\n            // @since 4.7.0\n            render_errors(errors) {\n                // hide and remove any previous errors\n                $('.woocommerce-error, .woocommerce-message').remove();\n                // add errors\n                this.ui_element.prepend('<ul class=\"woocommerce-error\"><li>' + errors.join('</li><li>') + '</li></ul>');\n                // unblock UI\n                this.ui_element.removeClass('processing').unblock();\n                // scroll to top\n                return $('html, body').animate({\n                    scrollTop: this.ui_element.offset().top - 100\n                }, 1000);\n            }\n            // Blocks the payment form UI.\n            // @since 4.7.0\n            block_ui() {\n                return this.ui_element.block({\n                    message: null,\n                    overlayCSS: {\n                        background: '#fff',\n                        opacity: 0.6\n                    }\n                });\n            }\n            // Unblocks the payment form UI.\n            // @since 4.7.0\n            unblock_ui() {\n                return this.ui_element.unblock();\n            }\n        };\n        // dispatch loaded event\n        return $(document.body).trigger('sv_wc_apple_pay_handler_v5_15_10_loaded');\n    });\n}).call($83dab3ad15da905a$exports);\n\n})();\n//# sourceMappingURL=sv-wc-payment-gateway-apple-pay.js.map\n","###\n WooCommerce Apple Pay Handler\n Version 4.7.0\n\n Copyright (c) 2016, SkyVerge, Inc.\n Licensed under the GNU General Public License v3.0\n http://www.gnu.org/licenses/gpl-3.0.html\n###\n\njQuery ( $ ) ->\n\n\t\"use strict\"\n\n\t# The WooCommerce Apple Pay handler base class.\n\t#\n\t# @since 4.7.0\n\tclass window.SV_WC_Apple_Pay_Handler_v5_15_10\n\n\n\t\t# Constructs the handler.\n\t\t#\n\t\t# @since 4.7.0\n\t\tconstructor: (args) ->\n\n\t\t\t@gateway_id               = args.gateway_id\n\t\t\t@gateway_slug             = args.gateway_slug\n\t\t\t@merchant_id              = args.merchant_id\n\t\t\t@ajax_url                 = args.ajax_url\n\t\t\t@validate_nonce           = args.validate_nonce\n\t\t\t@recalculate_totals_nonce = args.recalculate_totals_nonce\n\t\t\t@process_nonce            = args.process_nonce\n\t\t\t@payment_request          = args.payment_request\n\t\t\t@generic_error            = args.generic_error\n\n\t\t\t@wrapper   = '.sv-wc-external-checkout'\n\t\t\t@container = '.buttons-container'\n\t\t\t@button    = '.sv-wc-apple-pay-button'\n\n\n\t\t# Determines if Apple Pay is available.\n\t\t#\n\t\t# @since 4.7.0\n\t\t# @return bool\n\t\tis_available: ->\n\n\t\t\treturn false unless window.ApplePaySession\n\n\t\t\tApplePaySession.canMakePaymentsWithActiveCard( @merchant_id ).then ( canMakePayments ) =>\n\n\t\t\t\treturn canMakePayments\n\n\n\t\t# Initializes the handler.\n\t\t#\n\t\t# @since 4.7.0\n\t\tinit: ->\n\n\t\t\t# hide the wrapper if Apple Pay is the only button\n\t\t\tif $( @container ).children().length is 1\n\t\t\t\t$( @wrapper ).hide()\n\n\t\t\treturn unless this.is_available()\n\n\t\t\t# initialize for the various pages\n\t\t\tif $( 'form.cart' ).length\n\t\t\t\tthis.init_product_page()\n\t\t\telse if $( 'form.woocommerce-cart-form' ).length\n\t\t\t\tthis.init_cart_page()\n\t\t\telse if $( 'form.woocommerce-checkout' ).length\n\t\t\t\tthis.init_checkout_page()\n\n\t\t\t# bail if no UI was initialized\n\t\t\treturn unless @ui_element\n\n\t\t\tif @payment_request\n\t\t\t\t$( @button ).show()\n\t\t\t\t$( @wrapper ).show()\n\n\t\t\t$( document.body ).on 'click', '.sv-wc-apple-pay-button', ( e ) =>\n\n\t\t\t\te.preventDefault()\n\n\t\t\t\tthis.block_ui()\n\n\t\t\t\ttry\n\n\t\t\t\t\t@session = this.get_new_session( @payment_request )\n\n\t\t\t\t\t# set the payment card events\n\t\t\t\t\t@session.onvalidatemerchant        = ( event ) => this.on_validate_merchant( event )\n\t\t\t\t\t@session.onpaymentmethodselected   = ( event ) => this.on_payment_method_selected( event )\n\t\t\t\t\t@session.onshippingcontactselected = ( event ) => this.on_shipping_contact_selected( event )\n\t\t\t\t\t@session.onshippingmethodselected  = ( event ) => this.on_shipping_method_selected( event )\n\t\t\t\t\t@session.onpaymentauthorized       = ( event ) => this.on_payment_authorized( event )\n\t\t\t\t\t@session.oncancel                  = ( event ) => this.on_cancel_payment( event )\n\n\t\t\t\t\t@session.begin()\n\n\t\t\t\tcatch error\n\n\t\t\t\t\tthis.fail_payment( error )\n\n\n\t\t# Initializes the product page.\n\t\t#\n\t\t# @since 5.6.0\n\t\tinit_product_page: =>\n\n\t\t\t@ui_element = $( 'form.cart' )\n\n\n\t\t# Initializes the cart page.\n\t\t#\n\t\t# @since 5.6.0\n\t\tinit_cart_page: =>\n\n\t\t\t@ui_element = $( 'form.woocommerce-cart-form' ).parents( 'div.woocommerce' )\n\n\t\t\t# re-init if the cart totals are updated\n\t\t\t$( document.body ).on 'updated_cart_totals', =>\n\n\t\t\t\tthis.reset_payment_request()\n\n\n\t\t# Initializes the checkout page.\n\t\t#\n\t\t# @since 5.6.0\n\t\tinit_checkout_page: =>\n\n\t\t\t@ui_element = $( 'form.woocommerce-checkout' )\n\n\t\t\t$( document.body ).on 'updated_checkout', =>\n\n\t\t\t\t# re-init if the checkout is updated\n\t\t\t\tthis.reset_payment_request()\n\n\n\t\t# Gets a new Apple Pay session.\n\t\t#\n\t\t# @since 5.6.0\n\t\t#\n\t\t# @param [Object] payment_request payment request object\n\t\t# @return ApplePaySession\n\t\tget_new_session: ( payment_request ) ->\n\n\t\t\treturn new ApplePaySession( this.get_sdk_version(), payment_request )\n\n\n\t\t# Gets the Apple SDK version to use.\n\t\t#\n\t\t# @since 5.6.0\n\t\t# @return int\n\t\tget_sdk_version: ->\n\n\t\t\treturn 2\n\n\n\t\t# The callback for after the merchant data is validated.\n\t\t#\n\t\t# @since 4.7.0\n\t\ton_validate_merchant: ( event ) =>\n\n\t\t\tthis.validate_merchant( event.validationURL ).then ( merchant_session ) =>\n\n\t\t\t\tmerchant_session = JSON.parse( merchant_session )\n\n\t\t\t\t@session.completeMerchantValidation( merchant_session )\n\n\t\t\t, ( response ) =>\n\n\t\t\t\t@session.abort()\n\n\t\t\t\tthis.fail_payment 'Merchant could no be validated. ' + response.message\n\n\n\t\t# Validates the merchant data.\n\t\t#\n\t\t# @since 4.7.0\n\t\t# @return object\n\t\tvalidate_merchant: ( url ) => new Promise ( resolve, reject ) =>\n\n\t\t\tdata = {\n\t\t\t\t'action':      \"wc_#{ @gateway_id }_apple_pay_validate_merchant\",\n\t\t\t\t'nonce':       @validate_nonce,\n\t\t\t\t'merchant_id': @merchant_id,\n\t\t\t\t'url':         url\n\t\t\t}\n\n\t\t\t# retrieve a payment request object\n\t\t\t$.post @ajax_url, data, ( response ) =>\n\n\t\t\t\tif response.success\n\t\t\t\t\tresolve response.data\n\t\t\t\telse\n\t\t\t\t\treject response.data\n\n\n\t\t# Fires after a payment method has been selected.\n\t\t#\n\t\t# @since 4.7.0\n\t\ton_payment_method_selected: ( event ) =>\n\n\t\t\tnew Promise ( resolve, reject ) =>\n\n\t\t\t\tdata = {\n\t\t\t\t\t'action': \"wc_#{ @gateway_id }_apple_pay_recalculate_totals\",\n\t\t\t\t\t'nonce':  @recalculate_totals_nonce,\n\t\t\t\t}\n\n\t\t\t\t# retrieve a payment request object\n\t\t\t\t$.post @ajax_url, data, ( response ) =>\n\n\t\t\t\t\tif response.success\n\n\t\t\t\t\t\tdata = response.data\n\n\t\t\t\t\t\tresolve @session.completePaymentMethodSelection( data.total, data.line_items )\n\n\t\t\t\t\telse\n\n\t\t\t\t\t\tconsole.error '[Apple Pay] Error selecting a shipping contact. ' + response.data.message\n\n\t\t\t\t\t\treject @session.completePaymentMethodSelection( @payment_request.total, @payment_request.lineItems )\n\n\n\t\t# Fires after a shipping contact has been selected.\n\t\t#\n\t\t# @since 4.7.0\n\t\ton_shipping_contact_selected: ( event ) =>\n\n\t\t\tnew Promise ( resolve, reject ) =>\n\n\t\t\t\tdata = {\n\t\t\t\t\t'action':  \"wc_#{ @gateway_id }_apple_pay_recalculate_totals\",\n\t\t\t\t\t'nonce':   @recalculate_totals_nonce,\n\t\t\t\t\t'contact': event.shippingContact\n\t\t\t\t}\n\n\t\t\t\t# retrieve a payment request object\n\t\t\t\t$.post @ajax_url, data, ( response ) =>\n\n\t\t\t\t\tif response.success\n\n\t\t\t\t\t\tdata = response.data\n\n\t\t\t\t\t\tresolve @session.completeShippingContactSelection( ApplePaySession.STATUS_SUCCESS, data.shipping_methods, data.total, data.line_items )\n\n\t\t\t\t\telse\n\n\t\t\t\t\t\tconsole.error '[Apple Pay] Error selecting a shipping contact. ' + response.data.message\n\n\t\t\t\t\t\treject @session.completeShippingContactSelection( ApplePaySession.STATUS_FAILURE, [], @payment_request.total, @payment_request.lineItems )\n\n\n\t\t# Fires after a shipping method has been selected.\n\t\t#\n\t\t# @since 4.7.0\n\t\ton_shipping_method_selected: ( event ) =>\n\n\t\t\tnew Promise ( resolve, reject ) =>\n\n\t\t\t\tdata = {\n\t\t\t\t\t'action': \"wc_#{ @gateway_id }_apple_pay_recalculate_totals\",\n\t\t\t\t\t'nonce':  @recalculate_totals_nonce,\n\t\t\t\t\t'method': event.shippingMethod.identifier\n\t\t\t\t}\n\n\t\t\t\t# retrieve a payment request object\n\t\t\t\t$.post @ajax_url, data, ( response ) =>\n\n\t\t\t\t\tif response.success\n\n\t\t\t\t\t\tdata = response.data\n\n\t\t\t\t\t\tresolve @session.completeShippingMethodSelection( ApplePaySession.STATUS_SUCCESS, data.total, data.line_items )\n\n\t\t\t\t\telse\n\n\t\t\t\t\t\tconsole.error '[Apple Pay] Error selecting a shipping method. ' + response.data.message\n\n\t\t\t\t\t\treject @session.completeShippingMethodSelection( ApplePaySession.STATUS_FAILURE, @payment_request.total, @payment_request.lineItems )\n\n\n\t\t# The callback for after the payment data is authorized.\n\t\t#\n\t\t# @since 4.7.0\n\t\ton_payment_authorized: ( event ) =>\n\n\t\t\tthis.process_authorization( event.payment ).then ( response ) =>\n\n\t\t\t\tthis.set_payment_status( true )\n\n\t\t\t\tthis.complete_purchase( response )\n\n\t\t\t, ( response ) =>\n\n\t\t\t\tthis.set_payment_status( false )\n\n\t\t\t\tthis.fail_payment 'Payment could no be processed. ' + response.message\n\n\n\t\t# Processes the transaction data.\n\t\t#\n\t\t# @since 4.7.0\n\t\tprocess_authorization: ( payment ) => new Promise ( resolve, reject ) =>\n\n\t\t\tdata = {\n\t\t\t\taction:  \"wc_#{ @gateway_id }_apple_pay_process_payment\",\n\t\t\t\tnonce:   @process_nonce,\n\t\t\t\tpayment: JSON.stringify( payment )\n\t\t\t}\n\n\t\t\t$.post @ajax_url, data, ( response ) =>\n\n\t\t\t\tif response.success\n\t\t\t\t\tresolve response.data\n\t\t\t\telse\n\t\t\t\t\treject response.data\n\n\n\t\t# The callback for when the payment card is cancelled/dismissed.\n\t\t#\n\t\t# @since 4.7.0\n\t\ton_cancel_payment: ( event ) =>\n\n\t\t\tthis.unblock_ui()\n\n\n\t\t# Completes the purchase based on the gateway result.\n\t\t#\n\t\t# @since 4.7.0\n\t\tcomplete_purchase: ( response ) ->\n\n\t\t\twindow.location = response.redirect\n\n\n\t\t# Fails the purchase based on the gateway result.\n\t\t#\n\t\t# @since 4.7.0\n\t\tfail_payment: ( error ) ->\n\n\t\t\tconsole.error '[Apple Pay] ' + error\n\n\t\t\tthis.unblock_ui()\n\n\t\t\tthis.render_errors( [ @generic_error ] )\n\n\n\t\t# Sets the Apple Pay payment status depending on the gateway result.\n\t\t#\n\t\t# @since 4.7.0\n\t\tset_payment_status: ( success ) ->\n\n\t\t\tif success\n\t\t\t\tstatus = ApplePaySession.STATUS_SUCCESS\n\t\t\telse\n\t\t\t\tstatus = ApplePaySession.STATUS_FAILURE\n\n\t\t\t@session.completePayment( status )\n\n\n\t\t# Resets the payment request via AJAX.\n\t\t#\n\t\t# Extending handlers can call this on change events to refresh the data.\n\t\t#\n\t\t# @since 4.7.0\n\t\treset_payment_request: ( data = {} ) =>\n\n\t\t\tthis.block_ui()\n\n\t\t\tthis.get_payment_request( data ).then ( response ) =>\n\n\t\t\t\t$( @button ).show()\n\t\t\t\t$( @wrapper ).show()\n\n\t\t\t\t@payment_request = JSON.parse( response )\n\n\t\t\t\tthis.unblock_ui()\n\n\t\t\t, ( response ) =>\n\n\t\t\t\tconsole.error '[Apple Pay] Could not build payment request. ' + response.message\n\n\t\t\t\t$( @button ).hide()\n\t\t\t\t# hide the wrapper if Apple Pay is the only button\n\t\t\t\tif $( @container ).children().length is 1\n\t\t\t\t\t$( @wrapper ).hide()\n\n\t\t\t\tthis.unblock_ui()\n\n\n\t\t# Gets the payment request via AJAX.\n\t\t#\n\t\t# @since 4.7.0\n\t\tget_payment_request: ( data ) => new Promise ( resolve, reject ) =>\n\n\t\t\tbase_data = {\n\t\t\t\t'action': \"wc_#{ @gateway_id }_apple_pay_get_payment_request\"\n\t\t\t}\n\n\t\t\t$.extend data, base_data\n\n\t\t\t# retrieve a payment request object\n\t\t\t$.post @ajax_url, data, ( response ) =>\n\n\t\t\t\tif response.success\n\t\t\t\t\tresolve response.data\n\t\t\t\telse\n\t\t\t\t\treject response.data\n\n\n\t\t# Renders any new errors and bring them into the viewport.\n\t\t#\n\t\t# @since 4.7.0\n\t\trender_errors: ( errors ) ->\n\n\t\t\t# hide and remove any previous errors\n\t\t\t$( '.woocommerce-error, .woocommerce-message' ).remove()\n\n\t\t\t# add errors\n\t\t\t@ui_element.prepend '<ul class=\"woocommerce-error\"><li>' + errors.join( '</li><li>' ) + '</li></ul>'\n\n\t\t\t# unblock UI\n\t\t\t@ui_element.removeClass( 'processing' ).unblock()\n\n\t\t\t# scroll to top\n\t\t\t$( 'html, body' ).animate( { scrollTop: @ui_element.offset().top - 100 }, 1000 )\n\n\n\t\t# Blocks the payment form UI.\n\t\t#\n\t\t# @since 4.7.0\n\t\tblock_ui: -> @ui_element.block( message: null, overlayCSS: background: '#fff', opacity: 0.6 )\n\n\n\t\t# Unblocks the payment form UI.\n\t\t#\n\t\t# @since 4.7.0\n\t\tunblock_ui: -> @ui_element.unblock()\n\n\n\t# dispatch loaded event\n\t$( document.body ).trigger( 'sv_wc_apple_pay_handler_v5_15_10_loaded' )\n"],"names":["jQuery","$","window","SV_WC_Apple_Pay_Handler_v5_15_10","constructor","args","init_product_page","bind","init_cart_page","init_checkout_page","on_validate_merchant","validate_merchant","on_payment_method_selected","on_shipping_contact_selected","on_shipping_method_selected","on_payment_authorized","process_authorization","on_cancel_payment","reset_payment_request","get_payment_request","gateway_id","gateway_slug","merchant_id","ajax_url","validate_nonce","recalculate_totals_nonce","process_nonce","payment_request","generic_error","wrapper","container","button","is_available","ApplePaySession","canMakePaymentsWithActiveCard","then","canMakePayments","init","children","length","hide","ui_element","show","document","body","on","e","preventDefault","block_ui","session","get_new_session","onvalidatemerchant","event","onpaymentmethodselected","onshippingcontactselected","onshippingmethodselected","onpaymentauthorized","oncancel","begin","error1","fail_payment","parents","get_sdk_version","validationURL","merchant_session","JSON","parse","completeMerchantValidation","response","abort","message","url","Promise","resolve","reject","data","post","success","completePaymentMethodSelection","total","line_items","console","error","lineItems","shippingContact","completeShippingContactSelection","STATUS_SUCCESS","shipping_methods","STATUS_FAILURE","shippingMethod","identifier","completeShippingMethodSelection","payment","set_payment_status","complete_purchase","action","nonce","stringify","unblock_ui","location","redirect","render_errors","status","completePayment","base_data","extend","errors","remove","prepend","join","removeClass","unblock","animate","scrollTop","offset","top","block","overlayCSS","background","opacity","trigger","call"],"version":3,"file":"sv-wc-payment-gateway-apple-pay.js.map"}